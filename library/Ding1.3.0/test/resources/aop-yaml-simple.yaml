pointcuts: !!map
  aPointcut: 
    expression: ^.+
    method: invoke

beans: !!map
  invalidAspectType:
    class: ClassSimpleAOPYAML
    scope: singleton
    aspects:
      aspectA:
        pointcuts:
          pointcutA:
            method: invoke
            expression: ^.+
        type: blah
        ref: aspectBean
  
  aspectBean:
    class: ClassSimpleAOPYAMLAspect
    scope: singleton

  methodIntercepted:
    class: ClassSimpleAOPYAML
    scope: singleton
    aspects:
      aspectA:
        pointcuts:
          pointcutA:
            id: some
            method: invoke
            expression: targetMethod
        type: method
        ref: aspectBean

  multipleMethodIntercepted:
    class: ClassSimpleAOPYAML2
    scope: singleton
    aspects:
      aspectA:
        pointcuts:
          pointcutA:
            method: invoke
            expression: ^.+
        type: method
        ref: aspectBean

  globalAspectedBeanA:
    class: ClassSimpleAOPYAMLGlobalSomething
    scope: singleton

  globalAspectedBeanB:
    class: ClassSimpleAOPYAMLGlobalSomethingElse
    scope: singleton

  globalPointcut:
    class: ClassSimpleAOPYAML3
    scope: singleton
    aspects:
      aspectA:
        pointcuts:
          pointcutA:
            pointcut-ref: aPointcut
        type: method
        ref: aspectBean

  aspectExceptionBean:
    class: ClassSimpleAOPExceptionYAMLAspect
    scope: singleton

  exceptionIntercepted:
    class: ClassSimpleAOPExceptionYAML
    scope: singleton
    aspects:
      aspectA:
        pointcuts:
          pointcutA:
            expression: ^.+
            method: invoke
        type: exception
        ref: aspectExceptionBean
    
aspects: !!map
  globalAspect:
    pointcuts:
      apointCut:
        method: invoke
        expression: ^.+
    type: method
    ref: aspectBean
    expression: ClassSimpleAOPYAMLGlobal.+
