<?php

namespace Oak\Json;

use MetaPlayer\Contract\BandDto;
use MetaPlayer\ViewHelper;

/**
 * Test class for JsonUtils.
 * Generated by PHPUnit on 2011-12-27 at 17:26:45.
 */
class JsonUtilsTest extends \MetaPlayer\BaseTest {

    /**
     * @var JsonUtils
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        parent::setUp();
        
        $this->object = $this->container->getBean("jsonUtils");
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testGetClassMapping().
     */
    public function testGetClassMapping() {
        $this->assertNotEmpty($this->object->getClassMapping());
    }


    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testDeserialize().
     */
    public function testDeserialize() {
        $dto = new BandDto();
        $dto->id = 100500;
        $dto->name = "abc";
        $dto->foundDate = ViewHelper::formatDate(new \DateTime());
        $dto->endDate = '';
        
        $json = $this->object->serialize($dto);
        $this->assertNotEmpty($json);
    }

    /**
     * @covers {className}::{origMethodName}
     * @todo Implement testSerialize().
     */
    public function testSerialize() {
        $dto = new BandDto();
        $dto->id = 100500;
        $dto->name = "abc";
        $dto->foundDate = ViewHelper::formatDate(new \DateTime());
        $dto->endDate = array($dto, 'date', 'other date');

        $json = $this->object->serialize($dto);
        
        $deser = $this->object->deserialize($json);
        
        $this->assertTrue($deser instanceof BandDto);
        
        $this->assertEquals($dto->id, $deser->id);
        
        $this->assertTrue($deser->endDate[0] instanceof BandDto);
        $this->assertEquals($dto->id, $deser->endDate[0]->id);
        
        
    }

}
